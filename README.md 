
| Keyword     | Meaning                                   | Example Use                   |
|-------------|--------------------------------------------|-------------------------------|
| `public`    | Accessible from outside the class          | Interface methods             |
| `private`   | Hidden from outside, only accessible within|
|             | the class                                  | Internal data                 |
| `protected` | Accessible within the class and subclasses | Used in inheritance           |
| `const`     | Marks data or functions as unchangeable    | Read-only data, const methods |
| `static`    | Shared by all instances or retains value across calls | Counters, class-level data |


| –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ | –ó–Ω–∞—á–µ–Ω–∏–µ                                             | –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è                 |
|----------------|----------------------------------------------------- |--------------------------------------|
| `public`       | –î–æ—Å—Ç—É–ø–Ω–æ –∏–∑–≤–Ω–µ –∫–ª–∞—Å—Å–∞                                | –ú–µ—Ç–æ–¥—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞                    |
| `private`      | –°–∫—Ä—ã—Ç–æ, –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞                | –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ                    |
| `protected`    | –î–æ—Å—Ç—É–ø–Ω–æ –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ –∏ –µ–≥–æ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–æ–≤             | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏        |
| `const`        | –û–±–æ–∑–Ω–∞—á–∞–µ—Ç –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏–π         | –¢–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, const-–º–µ—Ç–æ–¥—ã      |
| `static`       | –û–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö —ç–∫–∑-–≤, —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∑–Ω–∞—á. –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ | –°—á—ë—Ç—á–∏–∫–∏, –¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å–∞      |


| Keyword     | Meaning, Access                | Example Use             |
|-------------|--------------------------------|-------------------------|
| `public`    | Accessible anywhere            | Methods for users       |
| `private`   | Only inside the class          | Internal variables      |
| `protected` | Inside class and subclasses    | Inheritance-related     |
| `const`     | Can't be changed               | Read-only values        |
| `static`    | Shared or persistent           | Common counters, class-level data |

–í–æ—Ç –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è static–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–∞–∫ –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω—è –∫–ª–∞—Å—Å–∞ ‚Äî —Ç–æ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∫–ª–∞—Å—Å–∞:

üìå –ü—Ä–∏–º–µ—Ä: class-level data - —Å—á—ë—Ç—á–∏–∫ –æ–±—ä–µ–∫—Ç–æ–≤

#include <iostream>

class MyClass {
private:
    static int objectCount; // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è (class-level)
	
public:
    MyClass() {
        objectCount++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
    }

    static int getObjectCount() {
        return objectCount; // –î–æ—Å—Ç—É–ø –∫ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    }
};

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤–Ω–µ –∫–ª–∞—Å—Å–∞
int MyClass::objectCount = 0;

int main() {
    MyClass a;
    MyClass b;
    MyClass c;

    std::cout << "Total objects created: " << MyClass::getObjectCount() << std::endl;
    return 0;
}
üß† –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
objectCount‚Äî —ç—Ç–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è , –æ–Ω–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–ª–∞—Å—Å—É , –∞ –Ω–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –æ–±—ä–µ–∫—Ç—É.

–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç MyClass, objectCount—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è.

–í—ã–∑–æ–≤ MyClass::getObjectCount()–ø–æ–∫–∞–∂–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
